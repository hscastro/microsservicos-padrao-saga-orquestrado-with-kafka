application:
  name: payment-service
server:
  port: 8091

spring:
  kafka:
    bootstrap-servers: ${KAFKA_BROKER:localhost:9092}
    topic:
      orchestrator: orchestrator
      payment-success: payment-success
      payment-fail: payment-fail
    consumer:
      group-id: payment-group
      auto-offset-reset: latest

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:payment-db}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      database-platform=org:
        hibernate:
          dialect:
            PostgreSQLDialect:


  # specify the hibernate dialect
  #spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
  #spring.jpa.properties.database-platform=org.hibernate.dialect.PostgreSQLDialect
  # tell hibernate not to query the database for jdbc metadata, because we don't have a tenant context at boot
  #spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
  # tell hibernate to not do auto ddl
  #spring.jpa.properties.hibernate.hbm2ddl.auto=none
  # tell hibernate to log sql, useful for development
  #spring.jpa.properties.hibernate.show_sql=false

logging:
  level:
    org:
      apache:
        kafka: off